{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Register a new user",
                "operationId": "43936973f8e2692c1479f47f03a584c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "User's phone",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "User's image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "userType": {
                                        "description": "userType choose between ['user','employee','admin']",
                                        "type": "string"
                                    },
                                    "comment": {
                                        "description": "to access image use https://mahllola.online/public/image  example : https://mahllola.online/public/storage/services_folder/ttyVNuauz67kqXX40jyewMwh3DWpdFjjyJ0pIiPd.jpg ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Authenticate user and generate token",
                "operationId": "6942ca1d56763b3a214de332c05d266d",
                "parameters": [
                    {
                        "name": "email_or_phone",
                        "in": "query",
                        "description": "User's email or phone to login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ahmed@gmail.com"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Am123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/editUserProfile/{user_id}": {
            "post": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Edit user profile",
                "operationId": "e36eca9c8cdaf3a2508913fc6617a797",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Update profile successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized action"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Get logged-in user details",
                "operationId": "6f7ca4c1e43467d7f1eeadf237ea0fe6",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/allUser": {
            "get": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Get display all user details",
                "operationId": "9a65ef22f77d39d0961403648e5a1329",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/notifications/{id}": {
            "get": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Show all notifications for a user",
                "operationId": "117734618549b114c435c7d21cdd124c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notifications retrieved successfully"
                                        },
                                        "notifications": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "userAuth"
                ],
                "summary": "User logout",
                "operationId": "caa4a932e14761c08f4977c5c1734c4b",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/employeeCompleteData": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Add details to employee",
                "operationId": "1dbb2ce22965cc6ef99407331b317302",
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "desc": {
                                        "description": "Description of the employee",
                                        "type": "string"
                                    },
                                    "imageSSN": {
                                        "description": "صورة الباطاقة",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "livePhoto": {
                                        "description": "صورة لايف",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "nationalId": {
                                        "description": " الرقم القومي",
                                        "type": "string"
                                    },
                                    "min_price": {
                                        "description": "Minimum price",
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    },
                                    "service_id": {
                                        "description": "Service ID",
                                        "type": "integer"
                                    },
                                    "works[0][image]": {
                                        "description": "Image work 1",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[1][image]": {
                                        "description": "Image work 2",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[2][image]": {
                                        "description": "Image work 3",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[3][image]": {
                                        "description": "Image work 4",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee details add successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "successfully"
                                        },
                                        "employee": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/updateWorksImage/{id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Edit an employee works image",
                "operationId": "updateWorksImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "works[0][image]": {
                                        "description": "Image work 1",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[1][image]": {
                                        "description": "Image work 2",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[2][image]": {
                                        "description": "Image work 3",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[3][image]": {
                                        "description": "Image work 4",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/employeeProfile/{id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Show employee profile",
                "description": "Show employee profile by employee id",
                "operationId": "2297a9c817dc43c2ad915af565cd1fe9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee to show profile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show employee profile successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/editEmployeeProfile/{id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee profile",
                "operationId": "editEmployeeProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the employee",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "Description of the employee",
                                        "type": "string"
                                    },
                                    "min_price": {
                                        "description": "Minimum price",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "Profile image of the employee",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/changeEmployeeStatus/{employee_id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Change employee status between ['available', 'busy']",
                "operationId": "get_employee_id",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "Employee status",
                                        "type": "string",
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Change employee status successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Change status successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No employee found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employee found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/showEmployeeLastWorks/{user_id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Show all employee work images",
                "description": "Show all employee work images by user ID",
                "operationId": "3acec25212b0b268039cdfd10e73b38d",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to show all last works images",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show last work successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "Employee Work Image": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No user found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No user found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/showAllEmployeesByServiceId/{service_id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get all employees in each service",
                "operationId": "eafe3029efab73457064d2378f35c24d",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "allemployee": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No employees found in this service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employee found in this service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Add details to employee",
                "operationId": "4c9136c85457820ba61480e2ef28c7e5",
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "what is the word you want to search by it",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "search retrieve response successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "successfully"
                                        },
                                        "employee": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/getTotalOrders/{id}/orders/total": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get total count of orders for employee",
                "operationId": "de6f9ddf4483f726e5faf5a76c8b3b3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "total orders": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No employee found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employee found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/notifications/{id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Show all notifications for employee by ID",
                "operationId": "7621e400ce3641834a9db7c49fa976cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/makeFeedback": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Add new feedback to employee",
                "operationId": "6ef6604d9f4198c4f4f6072ef234a879",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "user_id",
                                    "employee_id"
                                ],
                                "properties": {
                                    "comment": {
                                        "description": "Feedback comment",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "rating": {
                                        "description": "Rating (1-5)",
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    },
                                    "employee_id": {
                                        "description": "Employee ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feedback added successfully"
                    },
                    "401": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getEmployeeFeedback/{employee_id}": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get all feedback for an employee",
                "operationId": "f633598289d4d374784986195f0c546d",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No feedback found for this employee",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteFeedback/{id}": {
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete a feedback",
                "operationId": "eee6dda79f6a03bed3c9718a7849d56e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the feedback to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "No feedback found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/editFeedback/{id}": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Edit a feedback",
                "operationId": "editFeedback",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the feedback",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "comment",
                                    "rating"
                                ],
                                "properties": {
                                    "comment": {
                                        "description": "Comment of the feedback",
                                        "type": "string"
                                    },
                                    "rating": {
                                        "description": "Rating (1-5)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/store": {
            "post": {
                "tags": [
                    "location"
                ],
                "summary": "Add location to user",
                "operationId": "b82460b88165abfedd021a6041a76a57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "description": "City name",
                                        "type": "string"
                                    },
                                    "bitTitle": {
                                        "description": "Title or nickname for the location",
                                        "type": "string"
                                    },
                                    "street": {
                                        "description": "Street name",
                                        "type": "string"
                                    },
                                    "specialMarque": {
                                        "description": "Special landmark near the location",
                                        "type": "string"
                                    },
                                    "lat": {
                                        "description": "Latitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "long": {
                                        "description": "Longitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Added Location successfully"
                                        },
                                        "location": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/showUsersLocation/{user_id}": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Show all locations",
                "description": "Show all locations for a user by user ID",
                "operationId": "b3d9d65bb8c702d90091082bb73e8a55",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to show all locations",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show locations successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No locations found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No locations found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/update/{id}": {
            "post": {
                "tags": [
                    "location"
                ],
                "summary": "Update user location",
                "operationId": "a7516cb4e9c3a29bfec937be5bde2c54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "description": "City name",
                                        "type": "string"
                                    },
                                    "bitTitle": {
                                        "description": "Title or nickname for the location",
                                        "type": "string"
                                    },
                                    "street": {
                                        "description": "Street name",
                                        "type": "string"
                                    },
                                    "specialMarque": {
                                        "description": "Special landmark near the location",
                                        "type": "string"
                                    },
                                    "lat": {
                                        "description": "Latitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "long": {
                                        "description": "Longitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Updated Location successfully"
                                        },
                                        "location": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/destroy/{id}": {
            "delete": {
                "tags": [
                    "location"
                ],
                "summary": "Delete a location",
                "description": "Delete location for a user by location ID",
                "operationId": "6a9c28bd8d33ed2adb83a98f0392fc2c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete Location successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sponsor": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "Show all sponsors",
                "operationId": "807ae4de1f50e69c31f7628071c407cd",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "sponsors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sponsor/create": {
            "post": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "create a new sponsor",
                "operationId": "8f2fd5ec3ed61e8be2bacfcd10e61874",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "title of sponsors",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "sponsor description",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "sponsor image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "expired_at": {
                                        "description": "what is the sponsor expired at",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "comment": {
                                        "description": "to access image use https://mahllola.online/public/image  example : https://mahllola.online/public/storage/services_folder/ttyVNuauz67kqXX40jyewMwh3DWpdFjjyJ0pIiPd.jpg",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "add new sponsor successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sponsor/{id}": {
            "get": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "Get sponsor by id",
                "operationId": "1ba9a15657ee63f87e8ccac35bbe6391",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "sponsor id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sponsors"
                ],
                "summary": "Delete an sponsor",
                "description": "Delete sponsor by ID",
                "operationId": "67091bdbfdcf3ca08911c5cd62dc6a94",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sponsor to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sponsor deleted successfully"
                    },
                    "404": {
                        "description": "sponsor not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/makeOrder": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Add new order",
                "operationId": "823d6e8e95d4d96649819dab78bbba7a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "price": {
                                        "description": "Order price",
                                        "type": "integer"
                                    },
                                    "location": {
                                        "description": "Order location",
                                        "type": "string"
                                    },
                                    "date_of_delivery": {
                                        "description": "Date of delivery in DateTime format",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-12-23 17:40:00"
                                    },
                                    "order_descriptions": {
                                        "description": "Order descriptions",
                                        "type": "string"
                                    },
                                    "voucher_code": {
                                        "description": "Voucher code for discount",
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    },
                                    "employee_id": {
                                        "description": "Employee ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Make order successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Make order done"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "object",
                                            "example": {
                                                "price": [
                                                    "The price field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getUserOrders/{user_id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders of a user",
                "operationId": "3e5646eec1f297ef5ffa67e002f9610f",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No order found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No order found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getEmployeeOrders/{employee_id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders assigned to an employee",
                "operationId": "53171b1e0f75077236c5bcd29f3b7efc",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No order found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No order found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/changeOrderStatus/{order_id}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Change order status",
                "operationId": "c38330f772e73f15f77d3c9dabe1919b",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "New status for the order",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Change order status successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Change status successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No order found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No order found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/userCancelYourOrder/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Cancel order by user",
                "operationId": "7c05d224a0f694bafb2005298c73f8b9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Change order status to 'rejected' successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Change status successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No order found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No order found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "show all orders to admin",
                "operationId": "1b87309db8ad5f5de2124dbcf552d24c",
                "responses": {
                    "200": {
                        "description": "show all order succesfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteOrder/{order_id}": {
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete an order",
                "description": "Delete order by ID",
                "operationId": "f034669524e710e24074f1b28971b2c1",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "ID of the order to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "order deleted successfully"
                    },
                    "404": {
                        "description": "order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "services"
                ],
                "summary": "Show all services",
                "operationId": "93d89d1f71391c62aa6cc3610642cee6",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "services"
                ],
                "summary": "create a new service",
                "operationId": "0b661f9e8de5558388298a2f71810de6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "name of service",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "service description",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "service image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "comment": {
                                        "description": "to access image use https://mahllola.online/public/image  example : https://mahllola.online/public/storage/services_folder/ttyVNuauz67kqXX40jyewMwh3DWpdFjjyJ0pIiPd.jpg",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "add new service successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services/{service_id}": {
            "get": {
                "tags": [
                    "services"
                ],
                "summary": "Get service by id",
                "operationId": "f7395c811bc12ffe79066608c0d5a3e5",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "services"
                ],
                "summary": "edit to services",
                "operationId": "9df1a128ec2a1853a7868e7fcd8f8a47",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "service name",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "service description",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "update service successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "services"
                ],
                "summary": "Delete an service",
                "description": "Delete service by ID",
                "operationId": "91c77b0901a94b028f8f4300f284fcc0",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service deleted successfully"
                    },
                    "404": {
                        "description": "service not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vouchers": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Show all vouchers",
                "operationId": "6dd46a1789581f210211349827d09e65",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "vouchers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addVoucher": {
            "post": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "add new voucher",
                "operationId": "db0b1f257d199e1e211eb7c960ec2703",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "voucher code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "voucher type between [fixed,percent]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "discount",
                        "in": "query",
                        "description": "voucher discount",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status to voucher between [inactive,used,expired]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expired_at",
                        "in": "query",
                        "description": "voucher expired at",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "make voucher successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/showVouchersIsUsedByUser/{user_id}": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Show all locations",
                "description": "Show all vouchers for a user used by user ID",
                "operationId": "49b759ff86f1e9df9bbd3c2e1742f2fc",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to show all vouchers is used",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show vouchers successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No vouchers found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No locations found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}